vars:

  long-description: &long-description |
      AWS Kinesis is a fully managed service designed for real-time streaming
      data delivery to destinations such as Amazon S3, Amazon Redshift, Amazon
      Elasticsearch and Splunk. AWS KMS CMK customer-managed keys offers more
      granular control over your Kinesis data streams, and help you meet
      security requirements by providing an extra layer of protection for your
      Kinesis streams data at-rest.

  description: &description |
      This policy ensures that you use your own KMS CMK customer-managed keys to
      encrypt your Amazon Kinesis streams data, and maintain full control over
      who can use the CMK customer-managed keys to access this data. AWS KMS
      allows you to create, rotate, disable, enable and audit the Customer
      Master Keys (CMKs) applied to your Kinesis streams.

  kms-key-alias: &kms-key-alias alias/Company-Standardized-Kinesis-CMK

  violation-desc: &violation-desc |
      AWS Kinesis streams should be encrypted using KMS CMK customer-managed
      keys in order to meet regulatory requirements and protect your data
      at-rest. The identified Kinesis streams were not using KMS CMKs and have now
      been modified to utilize your company's standard Kinesis KMS CMK key.

  action-desc: &action-desc |
      The identified AWS Kinesis streams have been modified to utilize your
      Company Standard CMK customer-managed key for Kinesis. Please verify your
      Kinesis streams functionality.

  subject: &subject "AWS Kinesis - Kinesis Streams Encryption Has Been Enabled With A CMK - [custodian {{ account }} - {{ region }}]"

  mailer-queue: &mailer-queue https://sqs.{region}.amazonaws.com/{account}/cloud-custodian-mailer




policies:


##########################################################################
#####   AWS.KINESIS STREAMS - Not Encrypted Or Using AWS Managed KMS Key #
##########################################################################




#########################
## CloudTrail mode policy
#########################


- name: aws-kinesis-streams-encryption-cmk
  tags:
    - Category::Security
    - Compliance::APRA
    - Compliance::GDPR
    - Compliance::HIPAA
    - Compliance::MAS
    - Compliance::NIST
    - Compliance::PCI-DSS
    - Risk::High
  metadata:
    long-description: *long-description
  resource: kinesis
  mode:
    type: cloudtrail
    events:
      - source: kinesis.amazonaws.com
        event: CreateStream
        ids: 'requestParameters.streamName'
      - source: kinesis.amazonaws.com
        event: StopStreamEncryption
        ids: 'requestParameters.streamName'
  description: *description
  filters:
    - or:
      - "EncryptionType": absent
      - "EncryptionType": "NONE"
      - type: kms-key
        key: c7n:AliasName
        value: alias/aws/kinesis
  actions:
    - type: encrypt
      key: *kms-key-alias
    - type: notify
      template: default.html
      priority_header: 1
      subject: *subject
      violation_desc: *violation-desc
      action_desc: *action-desc
      to:
          - resource-owner
          - event-owner
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}





####################
## Pull mode policy
####################


- name: aws-kinesis-streams-encryption-cmk-pull
  tags:
    - Category::Security
    - Compliance::APRA
    - Compliance::GDPR
    - Compliance::HIPAA
    - Compliance::MAS
    - Compliance::NIST
    - Compliance::PCI-DSS
    - Risk::High
  metadata:
    long-description: *long-description
  resource: kinesis
  max-resources:
    percent: 10
    amount: 10
    op: and
  description: *description
  filters:
    - or:
      - "EncryptionType": absent
      - "EncryptionType": "NONE"
      - type: kms-key
        key: c7n:AliasName
        value: alias/aws/kinesis
  actions:
    - type: encrypt
      key: *kms-key-alias
    - type: notify
      template: default.html
      priority_header: 1
      subject: *subject
      violation_desc: *violation-desc
      action_desc: *action-desc
      to:
          - resource-owner
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}
