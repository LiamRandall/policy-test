vars:

    mailer-queue: &mailer-queue https://sqs.{region}.amazonaws.com/{account}/cloud-custodian-mailer

    security-team-email: &security-team-email security-team@company.com


policies:

#1 Identity and Access Management
#1.1 Maintain current contact details (Manual)
#1.2 Ensure security contact information is registered (Manual)
#1.3 Ensure security questions are registered in the AWS account (Manual)
#1.4 Ensure no root user account access key exists (Automated)
- name: aws-account-root-access-keys-present-notify-pull
  resource: aws.account
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.4']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,EKM-01,EKM-02,EKM-03,GRM-06,HRS-11,IAM-01,IAM-02,IAM-04,IAM-05,IAM-10,IAM-11,IAM-12]
    creator: Stacklet
    severity: high
    long-description: |
        It is recommended that all root user account access keys be removed
        after account setup. The root user is the most privileged account user
        so removing the keys helps limit the chances of the account becoming
        compromised and encourages using least privileged roles for access. Root
        access keys can only be removed by the root user so this policy will
        send a notification to impacted users to manually remove the access
        keys.
  description: |
    This policy will identify root users which have access keys present and
    notified impacted users to have the keys removed.
  filters:
      - type: credential
        key: access_keys.active
        value: true
      - type: credential
        key: user
        value: <root_account>
  actions:
   - type: notify
     template: default.html
     priority_header: 1
     subject: "AWS Root Access Key Found!!! - [custodian {{ account }} - {{ region }}]"
     to:
       - resource-owner
       - *security-team-email
     transport:
       type: sqs
       queue: *mailer-queue
       region: us-east-1


#1.5 Ensure MFA is enabled for the "root user" account (Automated)
- name: aws-iam-root-user-missing-mfa-notify-pull
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.5']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02]
    creator: Stacklet
    severity: high
    long-description: |
      This policy will identify root users which are missing an MFA device. Per
      security best practices, MFA devices should be used in order to provide an
      additional layer of security and to help prevent unauthorized access and
      account logins.
  resource: aws.iam-user
  region: us-east-1
  description: |
      IAM root users should be using an MFA device for all logins. Any root
      users without MFA devices will be identified and the impacted users
      notified.
  filters:
    - type: mfa-device
      key: UserName
      value: null
    - type: credential
      key: user
      value: <root_account>
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM Root User - No MFA Registered! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}


#1.6 Ensure hardware MFA is enabled for the "root user" account (Automated)
- name: aws-iam-root-hardware-only-mfa-notify-pull
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.6']
    creator: Stacklet
    severity: high
    long-description: |
        This policy will identify root users which have a virtual MFA device.
        Per security best practices, hardware MFA devices should be used instead
        of virtual MFA devices as hardware MFA devices are more secure and much
        harder for attackers to compromise. This policy should be used in
        conjunction with the IAM MFA policy to both ensure an MFA is being used
        and the MFA is a not a virtual device.
  resource: aws.iam-user
  region: us-east-1
  description: |
      IAM root users should only be using a hardware MFA token. Any root users
      with virtual MFA devices will be identified and the impacted users
      notified.
  filters:
    - type: mfa-device
      key: UserName
      value: not-null
    - type: credential
      key: user
      value: <root_account>
    - or:
       - type: value
         key: "MFADevices[0].SerialNumber"
         op: regex
         value: ^(arn:aws:iam?)\w+
       - type: value
         key: "MFADevices[1].SerialNumber"
         op: regex
         value: ^(arn:aws:iam?)\w+
       - type: value
         key: "MFADevices[2].SerialNumber"
         op: regex
         value: ^(arn:aws:iam?)\w+
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM Root User - MFA Is Not A Hardware Device! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}


#1.7 Eliminate use of the root user for administrative and daily tasks (Automated)
- name: aws-iam-root-user-activity-check-notify-pull
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.7']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,EKM-01,EKM-02,EKM-03,GRM-06,HRS-11,IAM-01,IAM-02,IAM-04,IAM-05,IAM-10,IAM-11,IAM-12]
    creator: Stacklet
    severity: high
    long-description: |
        This policy will check the IAM Credential report to see if there is any
        password or access key activity for the root user. Root users should not
        be used for day-to-day activities and any root user activity should be
        reviewed to make sure it is approved and legitimate activity.
  resource: aws.iam-user
  region: us-east-1
  description: |
      IAM root users should typically only be used when setting up the account
      initially and should not be used for general day-to-day activities. A
      least privileged IAM User should be utilized to achieve any needed
      day-to-day activities.
  filters:
    - type: credential
      key: user
      value: <root_account>
    - or:
       - type: credential
         key: password_last_used
         value_type: age
         value: 7
         op: less-than
       - type: credential
         key: access_keys.last_used_date
         value_type: age
         value: 7
         op: less-than
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM Root User - Activity Detected! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}


#1.8 Ensure IAM password policy requires minimum length of 14 or greater (Automated)
#1.9 Ensure IAM password policy prevents password reuse (Automated)
- name: aws-account-password-policy-check-notify-pull
  resource: aws.account
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.8','1.9']
    creator: Stacklet
    severity: high
  description: |
    This policy will check the password policy for each account and if it
    doesn't meet security best practices, a notification will be sent to impacted
    users.
  filters:
    - or:
      - type: password-policy
        key: MinimumPasswordLength
        value: 14
        op: lt
      - type: password-policy
        key: RequireSymbols
        value: false
      - type: password-policy
        key: RequireNumbers
        value: false
      - type: password-policy
        key: RequireUppercaseCharacters
        value: false
      - type: password-policy
        key: RequireLowercaseCharacters
        value: false
      - type: password-policy
        key: PasswordReusePrevention
        value: 24
        op: lt
      - type: password-policy
        key: MaxPasswordAge
        value: 90
        op: lt
      - type: password-policy
        key: ExpirePasswords
        value: false
      - type: password-policy
        key: HardExpiry
        value: false
  actions:
    - type: notify
      template: default.html
      priority_header: 2
      subject: "AWS Account Password Policy - Password Requirements Updated! [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}


#1.10 Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password (Automated)
- name: aws-iam-user-mfa-missing-notify-pull
  resource: aws.iam-user
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.10']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,EKM-01,EKM-02,EKM-03,GRM-06,HRS-11,IAM-01,IAM-02,IAM-04,IAM-05,IAM-10,IAM-11,IAM-12]
    creator: Stacklet
    severity: high
  description: |
      This policy will check all IAM Users which have console access to make
      sure the user has an MFA assigned. MFA tokens provide an additional layer
      of security to help prevent unauthorized access and to meet security best
      practices.
  filters:
    - type: credential
      key: password_enabled
      value: true
    - type: credential
      key: mfa_active
      value: false
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - MFA Token Not Assigned! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}



#1.11 Do not setup access keys during initial user setup for all IAM users that have a console password (Manual)
#1.12 Ensure credentials unused for 90 days or greater are disabled (Automated)
- name: aws-iam-user-stale-credentials-notify-pull
  resource: aws.iam-user
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.12']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,EKM-1,EKM-02,EKM-03,GRM-06,HRS-11,IAM-01,IAM-02,IAM-04,IAM-05,IAM-10,IAM-11,IAM-12]
    creator: Stacklet
    severity: high
  description: |
      This policy will check all IAM Users for stale credentials via the AWS IAM
      Credentials report. This will look for old console passwords and access
      keys which haven't been used for 90+ days. The policy will then send a
      notification to impacted users. Stale credentials should be cleaned up if
      they are no longer needed. If the credentials are still needed they should
      be reset to meet security best practices.
  filters:
    - or:
      - and:
        - type: credential
          key: access_keys.active
          value: true
        - type: credential
          key: access_keys.last_used_date
          value_type: age
          value: 90
          op: gt
      - and:
        - type: credential
          key: password_enabled
          value: true
        - type: credential
          key: password_last_used
          value_type: age
          value: 90
          op: gt
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - Stale Credentials Need Reset Or Removed! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}



#1.13 Ensure there is only one active access key available for any single IAM user (Automated)
- name: aws-iam-user-too-many-access-keys-notify-pull
  region: us-east-1
  resource: aws.iam-user
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.13']
    creator: Stacklet
    severity: high
  description: |
    Checks if IAM Users have more than 1 active Access Key assigned to them and
    notifies the IAM User owner. Per security best practices, there should only
    be 1 IAM Access Key per IAM User. Please remove the extra access key to help
    secure the IAM User and account.
  filters:
    - type: access-key
      key: Status
      value: Active
    - type: value
      key: "\"c7n:AccessKeys\"[0].Status"
      value: "Active"
    - type: value
      key: "\"c7n:AccessKeys\"[1].Status"
      value: "Active"
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - Extra Access Key Needs Removed! [custodian {{ account }} - {{ region }}]"
      to:
        - resource-owner
        - *security-team-email
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}



#1.14 Ensure access keys are rotated every 90 days or less (Automated)
## ------- NOTIFICATION ONLY-------------
- name: aws-iam-user-access-key-rotation-notify-pull
  region: us-east-1
  resource: aws.iam-user
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.14']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,EKM-01,EKM-02,EKM-03,GMR-06,HRS-11,IAM-01,IAM-02,IAM-04,IAM-05,IAM-10,IAM-11,IAM-12]
    creator: Stacklet
    severity: high
  description: |
      IAM users with Access Keys greater than 90 days old will be identified and
      the impacted users notified. Per security best practices, IAM User Access
      Keys should be rotated at least every 90 days to help secure the account
      and remove stale credentials.
  filters:
    - type: credential
      key: access_keys.last_rotated
      value_type: age
      value: 90
      op: greater-than
    - type: credential
      key: access_keys.active
      value: true
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - Old Access Key(s) Requiring Rotation - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}



#1.15 Ensure IAM Users Receive Permissions Only Through Groups (Automated)
- name: aws-iam-user-missing-group-permissions-notify-pull
  region: us-east-1
  resource: aws.iam-user
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.15']
    creator: Stacklet
    severity: high
  description: |
    This policy will identify IAM Users which are not a member of any IAM group.
    IAM Users should only be provided permissions through IAM Groups per AWS
    security best practices as group permissions are easier to manage than
    individual user policies.
  filters:
    - type: group
      key: GroupName
      value: null
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - No IAM Group Permissions Assigned! - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}


- name: aws-iam-user-inline-policy-permissions-notify-pull
  region: us-east-1
  resource: aws.iam-user
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.15']
    creator: Stacklet
    severity: high
  description: |
    This policy will identify IAM Users which have inline IAM policies directly
    attached. IAM Users should only be provided permissions through IAM Groups
    per AWS security best practices as group permissions are easier to manage
    than individual user policies. Please remove the inline user policies and
    add the required permissions through an IAM group assignment.
  filters:
    - type: has-inline-policy
      value: true
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM User - Inline Policy Needs Replaced With IAM Group Assignment! - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
        type: sqs
        queue: *mailer-queue
        region: {region}




#1.16 Ensure IAM policies that allow full "*:*" administrative privileges are not attached (Automated)
- name: aws-iam-policy-overly-permissive-notify-pull
  region: us-east-1
  resource: aws.iam-policy
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.16']
    creator: Stacklet
    severity: high
  description: |
      Checks IAM Policies for Admin privileges.  If Administrator permissions
      are present in the policy, impacted users will be notified.
  filters:
   - or:
      - type: has-allow-all
      - type: check-permissions
        match: allowed
        actions:
           - "*:*"
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS IAM Policy - Overly Permissive Policy [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}




#1.17 Ensure a support role has been created to manage incidents with AWS Support (Automated)
- name: aws-iam-support-role-missing-notify-pull
  resource: aws.account
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.17']
    creator: Stacklet
    severity: high
  description: |
      Checks accounts to see if they are missing IAM Roles with support access.
      A role should be created to allow for opening and managing AWS support
      cases.
  filters:
   - type: missing
     policy:
        resource: iam-role
        region: us-east-1
        filters:
          - type: has-specific-managed-policy
            value: AWSSupportAccess
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS IAM Role - AWS Support Role Missing [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}





#1.18 Ensure IAM instance roles are used for AWS resource access from instances (Manual)
#1.19 Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed (Automated)
- name: aws-iam-certificate-expired-notify-pull
  region: us-east-1
  resource: aws.iam-certificate
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.19']
    creator: Stacklet
    severity: high
  description: |
      If expired IAM server certificates are found, the owner is notified and
      instructed to remove the expired certificate and update any resources
      using the expired certificate to use a new one.
  filters:
   - type: value
     key: Expiration
     value_type: expiration
     op: lte
     value: 0
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS IAM Certificate - Server Certificate Expired [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}







#1.20 Ensure that S3 Buckets are configured with 'Block public access (bucket settings)' (Automated)
- name: aws-s3-enable-public-block-defaults-notify-pull
  resource: aws.s3
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.20']
    creator: Stacklet
    severity: high
  description: |
    This policy will check S3 buckets for the Public Block settings and if they
    are not enabled, a notification will be sent to impacted users.
  filters:
    - type: check-public-block
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS S3 Bucket - Public Block Settings Disabled!! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}



- name: aws-s3-enable-public-block-custom-notify-pull
  resource: aws.s3
  region: us-east-1
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.20']
    creator: Stacklet
    severity: high
  description: |
    This policy will check S3 buckets Public Block settings and if they are not
    setup correctly, a notification will be sent to impacted users.
  filters:
    - or:
      - type: check-public-block
        BlockPublicAcls: false
      - type: check-public-block
        BlockPublicPolicy: false
      - type: check-public-block
        IgnorePublicAcls: true
      - type: check-public-block
        RestrictPublicBuckets: false
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS S3 Bucket - Public Block Settings Incorrect!! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}






#1.21 Ensure that IAM Access analyzer is enabled (Automated)
- name: aws-account-access-analyzer-enabled-notify-pull
  region: us-east-1
  description: |
      This policy will identify AWS accounts which have IAM Access Analyzer
      disabled. IAM Access Analyzer should be enabled to meet AWS security best
      practices as the tool allows users to determine if there are any resources
      which grant unintended users access to the resources.
  resource: aws.account
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['1.21']
    creator: Stacklet
    severity: high
  filters:
        - type: access-analyzer
          key: 'status'
          value: DISABLED
          op: eq
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS IAM Access Analyzer - Currently Disabled! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}








#1.22 Ensure IAM users are managed centrally via identity federation or AWS Organizations for multi-account environments (Manual)





#2 Storage
#2.1 Simple Storage Service (S3)
#2.1.1 Ensure all S3 buckets employ encryption-at-rest (Manual)
- name: aws-s3-enable-default-bucket-encryption-notify-pull
  region: us-east-1
  resource: aws.s3
  metadata:
    category: [security/encryption]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['2.1.1']
    creator: Stacklet
    severity: high
  description: |
      This policy will identify S3 buckets which are not encrypted. All S3
      buckets should be encrypted at rest per AWS security best practices.
      Impacted S3 bucket users will be notified to updated their buckets
      encryption.
  filters:
    - type: bucket-encryption
      state: False
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS S3 Bucket - Encryption Is Disabled!! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}






#2.1.2 Ensure S3 Bucket Policy allows HTTPS requests (Manual)
- name: aws-s3-bucket-deny-http-requests-notify-pull
  region: us-east-1
  resource: aws.s3
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['2.1.2']
    creator: Stacklet
    severity: high
  description: |
      This policy will identify S3 buckets which are not denying HTTP requests.
      HTTP requests should be denied via S3 bucket policy as they are not secure
      or authenticated. Only HTTPS requests should be allowed on S3 buckets to
      meet AWS security best practices.
  filters:
    - not:
       - type: has-statement
         statements:
            - Effect: Deny
              Condition:
                 Bool:
                    aws:SecureTransport: 'false'
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS S3 Bucket - HTTP Requests Not Blocked! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}




#2.2 Elastic Compute Cloud (EC2)
#2.2.1 Ensure EBS volume encryption is enabled (Manual)
- name: aws-ebs-encrypted-notify-pull
  resource: aws.ebs
  metadata:
    category: [security/encryption]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['2.2.1']
    creator: Stacklet
    severity: high
  description: |
      This policy will identify EBS volumes which are not encrypted. Per AWS
      security best practices, all EBS volumes should be encrypted to ensure
      secure data storage and to help prevent unauthorized access.
  filters:
    - type: value
      key: Encrypted
      value: false
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS EBS Volume - Not Encrypted! [custodian {{ account }} - {{ region }}]"
      to:
            - *security-team-email
            - resource-owner
      transport:
            type: sqs
            queue: *mailer-queue
            region: {region}










#3 Logging
#3.1 Ensure CloudTrail is enabled in all regions (Automated)
- name: aws-cloudtrail-multi-region-notify-pull
  resource: aws.cloudtrail
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.1']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,BCR-07,BCR-10,BCR-11,CCC-02,CCC-04,IAM-01,IAM-12,IVS-01,IVS-02,IVS-03]
    creator: Stacklet
    severity: high
  description: |
    This policy will identify CloudTrail Trails that are not currently setup for
    all regions. Per AWS security best practices, CloudTrail should be enabled
    in all regions so unauthorized activity can be detected and logged, no
    matter where it occurs. If non-compliant CloudTrail Trails are identified, a
    notification will be sent to impacted users.
  filters:
      - IsMultiRegionTrail: false
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS CloudTrail - Not Enabled For All Regions!! [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}





#3.2 Ensure CloudTrail log file validation is enabled (Automated)
- name: aws-cloudtrail-log-file-validation-notify-pull
  resource: aws.cloudtrail
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.2']
    creator: Stacklet
    severity: high
  description: |
    This policy will identify CloudTrail Trails that are not currently setup for
    log file validation. Per AWS security best practices, CloudTrail should have
    log file validation enabled to provide log integrity. If non-compliant
    CloudTrail Trails are identified, a notification will be sent to the
    impacted users.
  filters:
      - LogFileValidationEnabled: false
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS CloudTrail - Log File Validation Is Disabled! [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}








#3.3 Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible (Automated)
#3.4 Ensure CloudTrail trails are integrated with CloudWatch Logs (Automated)
- name: aws-cloudtrail-cloudwatch-integration-notify-pull
  resource: aws.cloudtrail
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.4']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,CCC-04,IAM-01,IVS-01,IVS-02]
    creator: Stacklet
    severity: high
  description: |
    This policy will identify CloudTrail Trails that are not currently setup for
    CloudWatch Logs integration. Per AWS security best practices, CloudTrail
    should be logging to CloudWatch Logs to enable realtime and historic logging
    of all events. This allows setting up alarms based on user API activity. If
    non-compliant CloudTrail Trails are identified, a notification will be sent
    to impacted users.
  filters:
      - type: status
        key: IsLogging
        value: False
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS CloudTrail - CloudWatch Logs Integration Not Enabled! [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}





#3.5 Ensure AWS Config is enabled in all regions (Automated)
- name: aws-account-config-enabled-notify-pull
  resource: aws.account
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.5']
    creator: Stacklet
    severity: high
  description: |
    This policy will identify accounts which either do not have AWS Config
    enabled or have it incorrectly configured for proper full resource
    recording. Per AWS security best practices, AWS Config should be enabled and
    set to record all resources including global resources. Impacted users will
    be notified to enable or properly configure AWS Config.
  filters:
    - not:
      - type: check-config
        all-resources: true
        global-resources: true
        running: true
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS Config - Not Enabled Or Incorrect Configuration Present! [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}







##3.6 Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket (Automated)
#3.7 Ensure CloudTrail logs are encrypted at rest using KMS CMKs (Automated)
- name: aws-cloudtrail-encrypted-notify-pull
  resource: aws.cloudtrail
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.7']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,CCC-02,CCC-04,IAM-01,IVS-01,IVS-02]
    creator: Stacklet
    severity: high
  description: |
    This policy will identify CloudTrail Trails that are not currently being
    encrypted. Per AWS security best practices, CloudTrail should be encrypted
    with an AWS KMS key to help protect the sensitive data from unauthorized
    users. Having encryption enabled provides another layer of security as it
    requires users to have decrypt KMS permissions for the CloudTrail S3 bucket.
    Impacted users will be notified to enable the CloudTrail encryption setting.
  filters:
      - KmsKeyId: empty
  actions:
      - type: notify
        template: default.html
        priority_header: 1
        subject: "AWS CloudTrail - Log Encryption Is Not Enabled! [custodian {{ account }} - {{ region }}]"
        to:
            - *security-team-email
            - resource-owner
        transport:
            type: sqs
            queue: *mailer-queue
            region: {region}








#3.8 Ensure rotation for customer created CMKs is enabled (Automated)
- name: aws-kms-key-rotation-notify-pull
  resource: aws.kms-key
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.8']
      - type: CCM
        version: 3.0.1
        control-mappings: [AIS-04,AAC-03,BCR-05,BCR-11,CCC-02,CCC-04,DSI-01,DSI-03,DSI-06,DSI-07,EKM-01,EKM-02,EKM-03,EKM-04,IAM-02,IVS-11]
    creator: Stacklet
    severity: high
  description: |
     This policy will identify KMS keys that have not been set to auto rotate
     yearly. Per AWS security best practices, KMS keys should be rotated
     automatically to help prevent the impact of compromised keys. Impacted
     users will be notified to enable rotation for their KMS keys.
  filters:
    - type: key-rotation-status
      key: KeyRotationEnabled
      value: false
    - type: value
      key: KeyState
      op: eq
      value: "Enabled"
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS KMS Key - Auto Rotation Is Disabled!! - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}





#3.9 Ensure VPC flow logging is enabled in all VPCs (Automated)
- name: aws-vpc-flow-log-notify-pull
  resource: aws.vpc
  metadata:
    category: [security/logging]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['3.9']
      - type: CCM
        version: 3.0.1
        control-mappings: [CCC-05,IVS-12]
    creator: Stacklet
    severity: high
    long-description: |
      This policy will identify AWS VPC flow logs which are either not enabled or
      not configured properly. Per AWS security best practices, VPC flow logs
      should be enabled as they record and provide insights into traffic that
      traverses the VPC and can help identify anomalies or security issues.
      Impacted users will be notified to update their VPC flow log settings.
  description: |
    Identify VPCs which don't have flow logs setup correctly and send a
    notification to impacted users.
  filters:
    - type: flow-logs
      enabled: false
  actions:
    - type: notify
      template: default.html
      priority_header: 1
      subject: "AWS VPC Flow Logs - Flow Logs Are Not Enabled Or Configured Incorrectly! - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
          type: sqs
          queue: *mailer-queue
          region: {region}





#3.10 Ensure that Object-level logging for write events is enabled for S3 bucket(Automated)
#3.11 Ensure that Object-level logging for read events is enabled for S3 bucket(Automated)



#4 Monitoring
#4.1 Ensure a log metric filter and alarm exist for unauthorized API calls(Automated)
#4.2 Ensure a log metric filter and alarm exist for Management Console sign-in without MFA (Automated)
#4.3 Ensure a log metric filter and alarm exist for usage of "root" account(Automated)
#4.4 Ensure a log metric filter and alarm exist for IAM policy changes (Automated)
#4.5 Ensure a log metric filter and alarm exist for CloudTrail configuration changes(Automated)
#4.6 Ensure a log metric filter and alarm exist for AWS Management Console authentication failures (Automated)
#4.7 Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs (Automated)
#4.8 Ensure a log metric filter and alarm exist for S3 bucket policy changes(Automated)
#4.9 Ensure a log metric filter and alarm exist for AWS Config configuration changes (Automated)
#4.10 Ensure a log metric filter and alarm exist for security group changes(Automated)
#4.11 Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL) (Automated)
#4.12 Ensure a log metric filter and alarm exist for changes to network gateways (Automated)
#4.13 Ensure a log metric filter and alarm exist for route table changes (Automated)
#4.14 Ensure a log metric filter and alarm exist for VPC changes (Automated)
#4.15 Ensure a log metric filter and alarm exists for AWS Organizations changes (Automated)

#5 Networking
#5.1 Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports (Automated)
#5.2 Ensure no security groups allow ingress from 0.0.0.0/0 to remote server administration ports (Automated)
- name: aws-security-group-open-rule-notify-pull
  resource: aws.security-group
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['5.2']
      - type: CCM
        version: 3.0.1
        control-mappings: [GRM-01]
    creator: Stacklet
    severity: high
    long-description: |
      This policy will identify AWS security groups which have rules which allow
      ingress from all IPv4 or IPv6 addresses via 0.0.0.0/0 or ::0/0. The policy
      will then notify the impacted users. Per security best practices, security
      group rules should be limited to only the necessary IP CIDRs needed for
      communication and should not be open to everyone as this presents a large
      security risk to your infrastructure and may allow attackers to access your
      environment.
  description: |
    This policy will find security groups open to the world and send a
    notification to impacted users. The open rules should be removed for
    security reasons.
  filters:
    - or:
          - type: ingress
            Cidr:
              value: "0.0.0.0/0"
          - type: ingress
            CidrV6:
              value: "::/0"
  actions:
   - type: notify
     template: default.html
     priority_header: 1
     subject: "AWS Security Group - Open Rule Found!!! - [custodian {{ account }} - {{ region }}]"
     to:
       - resource-owner
       - *security-team-email
     transport:
       type: sqs
       queue: *mailer-queue
       region: us-east-1






#5.3 Ensure the default security group of every VPC restricts all traffic (Automated)
- name: aws-security-group-vpc-default-restrict-all-notify-pull
  resource: aws.security-group
  metadata:
    category: [security/access-control]
    compliance:
      - type: CIS
        version: 1.3.0
        control-mappings: ['5.3']
      - type: CCM
        version: 3.0.1
        control-mapping: [CCC-05,GRM-01,IVS-06,IVS-12]
    creator: Stacklet
    severity: high
    long-description: |
      This policy will identify AWS VPC default security groups which are allowing
      traffic. The policy will then notify the impacted users. Per security best
      practices, AWS default VPC security group rules should be restricting all
      traffic to encourage least privileged access and the creation of custom
      security groups which match the exact traffic needs for a specific resource
      or set of resources.
  description: |
    This policy will find AWS VPC default security groups which have any ingress
    or egress permissions and send a notification to impacted users.
  filters:
      - "GroupName": "default"
      - or:
           - "IpPermissions": not-null
           - "IpPermissionsEgress": not-null
  actions:
   - type: notify
     template: default.html
     priority_header: 1
     subject: "AWS VPC Default Security Group - Traffic Not Restricted!!! - [custodian {{ account }} - {{ region }}]"
     to:
       - resource-owner
       - *security-team-email
     transport:
       type: sqs
       queue: *mailer-queue
       region: us-east-1






#5.4 Ensure routing tables for VPC peering are "least access" (Manual)
