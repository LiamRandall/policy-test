vars:

    mailer-queue: &mailer-queue https://sqs.{region}.amazonaws.com/{account}/cloud-custodian-mailer

    security-team-email: &security-team-email security-team@company.com



policies:


#######################################################################
## Cost Savings EC2 Offhours Policies (Turn off instances when not being used to save up to 75%+)
#######################################################################

- name: aws-ec2-off-hours-stop
  resource: aws.ec2
  description: |
     Stops any EC2 instance which has a custodian_offhours
     tag set if the day and time specified in the tag match
     the current day and time. Ex off=(M-F,19);on=(M-F,7);tz=ct
  mode:
   type: periodic
   schedule: "rate(10 minutes)"
  filters:
    - "State.Name": running
    - type: offhour
      tag: custodian_offhours
      default_tz: ct
      offhour: 19
  actions:
    - stop


- name: aws-ec2-off-hours-start
  resource: aws.ec2
  description: |
     Starts any EC2 instance which has a custodian_offhours
     tag set if the day and time specified in the tag match
     the current day and time. Ex off=(M-F,19);on=(M-F,7);tz=ct
  mode:
     type: periodic
     schedule: "rate(10 minutes)"
  filters:
    - "State.Name": stopped
    - type: onhour
      tag: custodian_offhours
      default_tz: ct
      onhour: 7
  actions:
    - start






################################################################################
## Cost Savings - Identify, notify, and delete unused EBS Volumes (Policy Chain)
################################################################################


- name: aws-ebs-mark-unattached-deletion
  resource: aws.ebs
  description: |
     Mark any unattached EBS volumes for deletion in
     30 days. This will clean up old unused orphaned
     volumes that customers forget to delete.
  filters:
     - "tag:custodian_unnattached_volume": absent
     - "tag:custodian_unnattached_volume1": absent
     - State: available
     - "tag:custodian_no_ebs_delete": absent
  actions:
     - type: mark-for-op
       tag: custodian_unnattached_volume
       op: delete
       days: 25


- name: aws-ebs-unmark-attached-deletion
  resource: aws.ebs
  description: |
    Unmark any attached EBS volumes that were scheduled
    for deletion if they are currently attached to an instance
  filters:
     - State: in-use
     - or:
       - "tag:custodian_unnattached_volume": not-null
       - "tag:custodian_unnattached_volume1": not-null
  actions:
     - type: unmark
       tags: ["custodian_unnattached_volume"]



- name: aws-ebs-no-notify-before-delete
  resource: aws.ebs
  description: |
   If customer opts-out of notifications via the
   custodian_ignore_unused tag they won't get notified
   but the ebs is marked 5 days prior to deleting any
   unattached EBS volumes that were scheduled for
   deletion.  This is to reduce costs and cleanup
   orphaned volumes.
  filters:
     - "tag:custodian_ignore_unused": present
     - State: available
     - type: marked-for-op
       tag: custodian_unnattached_volume
       op: delete
  actions:
     - type: unmark
       tags: ["custodian_unnattached_volume"]
     - type: mark-for-op
       tag: custodian_unnattached_volume1
       op: delete
       days: 5



- name: aws-ebs-notify-before-delete
  resource: aws.ebs
  description: |
     Notify customers 5 days prior to deleting any unattached
     EBS volumes that were scheduled for deletion. This is to
     reduce costs and cleanup orphaned volumes.
  filters:
     - "tag:custodian_ignore_unused": absent
     - "tag:custodian_no_ebs_delete": absent
     - State: available
     - type: marked-for-op
       tag: custodian_unnattached_volume
       op: delete
  actions:
     - type: unmark
       tags: ["maid_status", "custodian_unnattached_volume"]
     - type: mark-for-op
       tag: custodian_unnattached_volume1
       op: delete
       days: 5
     - type: notify
       template: default.html
       priority_header: 2
       subject: "EBS - Unattached Volumes To Be Deleted - [custodian {{ account }} - {{ region }}]"
       to:
         - resource-owner
         - *security-team-email
       transport:
         type: sqs
         queue: *mailer-queue
         region: us-east-1



- name: aws-ebs-delete-marked
  resource: aws.ebs
  description: |
    Delete any unattached EBS volumes that were scheduled
    for deletion 30 days prior and notify customer.
  filters:
     - type: marked-for-op
       tag: custodian_unnattached_volume1
       op: delete
     - State: available
     - "tag:custodian_no_ebs_delete": absent
  actions:
     - delete
     - type: notify
       template: default.html
       priority_header: 2
       subject: "EBS - Unattached Volumes Deleted - [custodian {{ account }} - {{ region }}]"
       to:
         - *security-team-email
         - resource-owner
       transport:
         type: sqs
         queue: *mailer-queue
         region: us-east-1




#########################################################################
## Cost Savings - Identify, notify, and delete unused ELBs (Policy Chain)
#########################################################################



- name: aws-elb-mark-unused-for-deletion
  resource: aws.elb
  description: |
    Mark any ELB with no instances attached for deletion in 14 days.
    Also send an email to the ELB resource owner informing them its unused.
  filters:
    - "tag:maid_status": absent
    - Instances: []
  actions:
    - type: mark-for-op
      tag: maid_status
      op: delete
      days: 14
    - type: notify
      template: default.html
      priority_header: 1
      subject: "ELB - No Instances Attached - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
        type: sqs
        queue: *mailer-queue
        region: us-east-1



- name: aws-elb-unmark-if-in-use
  resource: aws.elb
  description: |
    Remove the maid_status tag from any elb which has instances attached
    so it doesn't get deleted by the following policy
  filters:
    - "tag:maid_status": not-null
    - not:
      - Instances: []
  actions:
    - type: remove-tag
      tags: [maid_status]




- name: aws-elb-delete-unused
  resource: aws.elb
  description: |
    Delete any marked ELB which has no instances attached
    if it has been that way for 14 days or more.
  filters:
    - type: marked-for-op
      op: delete
  actions:
    - delete
    - type: notify
      template: default.html
      priority_header: 1
      subject: "ELB - Deleted Stale ELB - [custodian {{ account }} - {{ region }}]"
      to:
        - *security-team-email
        - resource-owner
      transport:
        type: sqs
        queue: *mailer-queue
        region: us-east-1







#####################################################################################
## Cost Savings - Identify and notify on unused AWS Workspace Desktops (Policy Chain)
#####################################################################################


- name: aws-workspaces-on-and-unused-30-days
  resource: aws.workspaces
  mode:
     type: periodic
     schedule: "rate(21 days)"
  description: |
     Finds Workspaces that are set to ALWAYS_ON
     but haven't been used in over 30 days.
  filters:
     - "WorkspaceProperties.RunningMode": ALWAYS_ON
     - type: connection-status
       value_type: age
       key: LastKnownUserConnectionTimestamp
       op: ge
       value: 30
     - type: connection-status
       value_type: age
       key: LastKnownUserConnectionTimestamp
       op: le
       value: 60
  actions:
     - type: notify
       template: default.html
       priority_header: 2
       subject: "Workspaces - Unused For Over 30 Days!  [custodian {{ account }} - {{ region }}]"
       to:
         - *security-team-email
         - resource-owner
       transport:
         type: sqs
         queue: *mailer-queue
         region: us-east-1




- name: aws-workspaces-on-and-unused-90-days
  resource: aws.workspaces
  mode:
     type: periodic
     schedule: "rate(21 days)"
  description: |
     Finds Workspaces that are set to ALWAYS_ON
     but haven't been used in over 90 days.
  filters:
     - "WorkspaceProperties.RunningMode": ALWAYS_ON
     - type: connection-status
       value_type: age
       key: LastKnownUserConnectionTimestamp
       op: ge
       value: 90
     - type: connection-status
       value_type: age
       key: LastKnownUserConnectionTimestamp
       op: le
       value: 180
  actions:
     - type: notify
       template: default.html
       priority_header: 1
       subject: "Workspaces - Unused For Over 90 Days!  [custodian {{ account }} - {{ region }}]"
       to:
         - *security-team-email
         - resource-owner
       transport:
         type: sqs
         queue: *mailer-queue
         region: us-east-1




- name: aws-workspaces-on-and-unused-365-days
  resource: aws.workspaces
  mode:
     type: periodic
     schedule: "rate(21 days)"
  description: |
     Finds Workspaces that are set to ALWAYS_ON
     but haven't been used in over 365 days.
  filters:
     - "WorkspaceProperties.RunningMode": ALWAYS_ON
     - type: connection-status
       value_type: age
       key: LastKnownUserConnectionTimestamp
       op: ge
       value: 365
  actions:
     - type: notify
       template: default.html
       priority_header: 1
       subject: "Workspaces - Unused For Over 365 Days!  [custodian {{ account }} - {{ region }}]"
       to:
         - *security-team-email
         - resource-owner
       transport:
         type: sqs
         queue: *mailer-queue
         region: us-east-1
